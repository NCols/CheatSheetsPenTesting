Passive Information Gathering
=============================

OSINT
=====

OSINT (Open-source intelligence) means trying to figure out information about a company, its systems and employees mostly by querying publicly available external sources while avoiding to contact your target directly. This is an advantage as your target will not know what you are doing. You can query search engines, LinkedIn, Github, execute DNS, reverse DNS queries for employee and company information. Domains, hostnames, email addresses of employees and public visible code repositories all provide useful information that can be brought to use in later stages of an attack.


Netcraft – www.netcraft.com
===========================
Netcraft can be used to gather information about a particular website and help rule out certain vulnerabilities for a particular OS for example.


Whois
=====
All domain registrars keep records of the domains they host. These records contain information about the owner, including contact information.

    root@kali:~# whois jpsecnetworks.com

    Domain Name: JPSECNETWORKS.COM
    Registry Domain ID: 2300229417_DOMAIN_COM-VRSN
    Registrar WHOIS Server: whois.fastdomain.com
    Registrar URL: http://www.fastdomain.com
    Updated Date: 2018-08-21T13:35:39Z
    Creation Date: 2018-08-21T13:35:39Z
    Registry Expiry Date: 2019-08-21T13:35:39Z

– Information about the site owner:

    Registry Registrant ID: FAST-44769112
    Registrant Name: JOAO PAULO COUTINHO PINHEIRO
    Registrant Organization: JOAO PAULO
    Registrant Street: AV. JOAO AMBIEL, NUM 1657
    Registrant City: INDAIATUBA
    Registrant State/Province: SAO PAULO
    Registrant Postal Code: 13332-810
    Registrant Country: BR
    Registrant Phone: +55.19982266814
    Registrant Phone Ext:
    Registrant Fax:
    Registrant Fax Ext:
    Registrant Email: DEGRAUS@GMAIL.COM

– Information about name server:

    Name Server: NS1.BLUEHOST.COM
    Name Server: NS2.BLUEHOST.COM

Whois can also perform a reverse lookup. By doing a nslookup on one the domain name we can get the IP address.

    root@kali:~# whois 162.241.216.158
    –snip–

    NetRange:       162.240.0.0 – 162.241.255.255
    CIDR:           162.240.0.0/15
    NetName:        UNIFIEDLAYER-NETWORK-16
    NetHandle:      NET-162-240-0-0-1
    Parent:         NET162 (NET-162-0-0-0-0)
    NetType:        Direct Allocation
    OriginAS:       AS46606
    Organization:   Unified Layer (BLUEH-2)
    RegDate:        2013-08-22
    Updated:        2013-08-22
    Ref:            https://rdap.arin.net/registry/ip/162.240.0.0




Google Hacking
==============
https://www.alienvault.com/blogs/security-essentials/how-pen-testers-use-google-hacking
https://www.exploit-db.com/google-hacking-database




theHarvester
============
Usage: theharvester options

  -d: Domain to search or company name
  -b: data source: baidu, bing, bingapi, dogpile, google, googleCSE,
                        googleplus, google-profiles, linkedin, pgp, twitter, vhost,
                        virustotal, threatcrowd, crtsh, netcraft, yahoo, all

    root@kali:~# theharvester -d gmail.com -l 500 -b all



Searchsploit
============
The database can be updated by using the following command :

    root@kali:~# searchsploit -u

SearchSploit uses an AND operator, not an OR operator. The more terms that are used, the more results will be filtered out.

Searches can be restricted to the titles by using the “-t” option:

    root@kali:~# searchsploit -t oracle windows

We can remove unwanted results by using the “–exclude=””” option. We are also able to remove multiple terms by separating the value with a “|” (pipe).

    root@kali:~# searchsploit -t oracle windows –exclude=”Windows x86″


So now that we have found the exploit we are looking for, there are various ways to access it quickly.
By using “-p“, we are able to get some more information about the exploit, as well as copy the complete path to the exploit onto the clipboard.

    root@host:~# searchsploit -p 35777
      Exploit: Oracle MySQL (Windows) - FILE Privilege Abuse (Metasploit)
          URL: https://www.exploit-db.com/exploits/35777/
         Path: /usr/share/exploitdb/exploits/windows/remote/35777.rb
    File Type: Ruby script, ASCII text, with CRLF line terminators

    Copied EDB-ID #35777's path to the clipboard.
    root@host:~# cat /usr/share/exploitdb/exploits/windows/remote/35777.rb




Recon-ng
========
https://www.jpsecnetworks.com/week-4-oscp-preparation-information-gathering-part-ii-recon-ng/

Recon-ng is a full featured web reconnaissance framework written in Python. Whereas MSF (Metasploit Framework) is an awesome Framework designed to allow pen testers to automate the process of exploiting known vulnerabilities, Recon-ng is a modular utility to support gathering information through a Metasploit-like experience.

Preloaded modules:

These modules are python scripts that will perform some sort of task.

    Discovery – Exploitation – Import -Recon – Reporting

Useful commands:
----------------

- Show
    [recon-ng][default] > show
    Shows various framework items

- Show modules: Displays the modules available.

- Show domains :  Shows the domains that were added to perform the recon scan.

- Show dashboard: Shows all current activities or tasks that were performed.

- Show workspaces: Displays the workspaces. A workspace is a virtual directory that can be created to store the information for your recon scan.

To change to another workspace, use the command workspaces select <workspace>.

show keys: Displays the preloaded keys for APIs.

How to add a key: https://www.cybrary.it/0p3n/recon-ng-advanced-open-source-recon-framework/

- Show schema : Displays the format recon-ng stores the information.

- Add command: Use to add domains, compaines, workspaces and so on to a specific database.

    [recon-ng][recon-01] > add
    Adds records to the database

    Usage: add <table> [values]

    optional arguments:
    values => ‘~’ delimited string representing column values (exclude rowid, module)

- Add a new workspace:
    > workspaces add recon-01

- Add a new domain:
    > add domains bbc.co.uk
    > show domains

- Add a company:
    > add companies
    Company (Text): BBC
    Description (Text): descr....
    > show companies

- Search command: Search existing modules based on the word typed.

    [recon-ng][recon-01] > search
    Searches available modules

    Usage: search <string>]

- Use command: used to choose a specific module.

    recon-ng][recon-01] > use
    Loads specified module

    Usage: [load|use] <module>

- Set command: used to set module options and display the options set within a module.

    [recon-ng][recon-01] > set
    Sets module options

    Usage: set <option> <value>

- Run command: Used to run the module.



Performing a recon scan
-----------------------

We added a domain and a company in the examples above. Let’s add a few more domains so we can expand our scan.

Gathering information about the company:

Right now our hosts table is empty. Let’s use the domains to figure out some hosts. Let’s start by quering Bing web search. By using the use command we set the bing_domain_web module. Once we are in the module, we can use the  show info to display the options available to use it. Some modules will only work if a particular option  is used.

    Bing Hostname Enumerator
    Module name: bing_domain_web
    Categories: recon, domains-hosts
    Author(s): Tim Tomes (@LaNMaSteR53)
    Harvests hosts from Bing.com by using the ‘site’ search operator. Updates the
    ‘hosts’ table with the results.

Since this module does not require any mandatory option to work, we can use the command run to run it.

If we look at our hosts table now we will see some information.

Now let’s resolve those hosts to ip addresses:

    Hostname Resolver
    Module name: resolve
    Categories: recon, hosts-hosts
    Author(s): Tim Tomes (@LaNMaSteR53)
    Resolves the IP address for a host. Updates the ‘hosts’ table with the results.

and then reverse resolve the IP’s to figure out what else is hosted there:

    Reverse Resolver
    Module name: reverse_resolve
    Categories: recon, netblocks-hosts
    17Author(s): John Babio (@3vi1john)
    Conducts a reverse lookup for each of a netblock’s IP addresses to resolve the
    hostname. Updates the ‘hosts’ table with the results.

Sometimes the table has too many columns and you want to make it shorter for a better understanding. We can use the Query command.

Query Command : Used to query the database and display the selected information.

    [recon-ng][recon-01] > query
    Queries the database

    Usage: query <sql>

    SQL examples:
    SELECT columns|* FROM table_name
    SELECT columns|* FROM table_name WHERE some_column=some_value
    DELETE FROM table_name WHERE some_column=some_value
    INSERT INTO table_name (column1, column2,…) VALUES (value1, value2,…)
    UPDATE table_name SET column1=value1, column2=value2,… WHERE some_column=some_value

Let’s add the hosts we found to our domain table.

    Hosts to Domains Data Migrator
    Module name: migrate_hosts
    Categories: recon, hosts-domains
    Author(s): Tim Tomes (@LaNMaSteR53)
    Adds a new domain for all the hostnames stored in the ‘hosts’ table.

Now that we have our list of hosts, we can query for vulnerabilities.

    XSSed Domain Lookup
    Module name: xssed
    Categories: recon, domains-vulnerabilities
    Author(s): Micah Hoffman (@WebBreacher)
    Checks XSSed.com for XSS records associated with a domain and displays the
    first 20 results.

Let’s search for files:

    Meta Data Extractor
    Module name: metacrawler
    Categories: recon, domains-contacts
    Author(s): Tim Tomes (@LaNMaSteR53)
    Searches for files associated with the provided domain(s) and extracts any contact related metadata.

There are other ways to extend the list of hosts. We can use the netcraft module for example to do it. Since this is a demo, I will do it now but if it was a real recon, it should have been done before scanning for vulnerabilities and files.

    Netcraft Hostname Enumerator
    Module name: netcraft
    Categories: recon, domains-hosts
    Author(s): thrapt (thrapt@gmail.com)
    Harvests hosts from Netcraft.com. Updates the ‘hosts’ table with the results.

If we check our host table now, we will see that more hosts have been added to it. If you want, you can use the reverse-resolve too. It will depend on the amount of information you want to scan.

Our host table may have duplicate entries so we can delete them with the query command. In this example, I decided to keep the netcraft module and delete the resolve module from the table.

Gathering information about Company’s employees:

Now let’s see if we can get any contact based on the domains we previously added.

    Whois POC Harvester
    Module name: whois_pocs
    Categories: recon, domains-contacts
    Author(s): Tim Tomes (@LaNMaSteR53)
    Uses the ARIN Whois RWS to harvest POC data from whois queries for the
    given domain. Updates the ‘contacts’ table with the results.

- Show contacts: Displays the information gathered from the run command in a table format.

You can perform other searches to social networks for example but most of them required a API key to run.

Now that we have the emails, we can check if they are associated with any breached credentials.

    Have I been pwned? Breach Search
    Module name: hibp_breach
    Categories: recon, contacts-credentials
    Author(s): Tim Tomes (@LaNMaSteR53) & Tyler Halfpop (@tylerhalfpop)
    Leverages the haveibeenpwned.com API to determine if email addresses are
    associated with breached credentials. Adds compromised email addresses to the
    ‘credentials’ table.

- Show credentials – Displays the contacts which have had a credential breach.

We gathered some data and now we can save it to a html format report. As we can see in the show info, we have some options which are mandatory to generate the report.

    > use reporting/html
    > show info
    > SET CREATOR JP
    > SET CUSTOMER BBC
    > set FILENAME /home/...
    > set

To check the report just navigate to the folder and open it.





Active Information Gathering
============================

DNS Reconnaissance / Enumeration
--------------------------------

DNS enumeration is one of the most critical steps. When we mention DNS enumeration, we are referenced to all the techniques we use to gather as much information as possible by querying the DNS server of a website or host.


- Nslookup:

We can use nslookup to convert the domain name to IP.

    root@kali:/# nslookup zonetransfer.me
    Server: 8.8.8.8
    Address: 8.8.8.8#53

    Non-authoritative answer:
    Name: zonetransfer.me
    Address: 5.196.105.14

- Dig:

dig is a command-line tool for querying DNS name servers for information about host addresses, mail exchanges, name servers,and related information. Dig has an extensive amount of option.

In the simplest way, it works just like nslookup:

    root@kali:/# dig zonetransfer.me

    ; <<>> DiG 9.11.4-4-Debian <<>> zonetransfer.me
    ;; global options: +cmd
    ;; Got answer:
    ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 3291
    ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1

    ;; OPT PSEUDOSECTION:
    ; EDNS: version: 0, flags:; udp: 512
    ;; QUESTION SECTION:
    ;zonetransfer.me. IN A

    ;; ANSWER SECTION:
    zonetransfer.me. 4590 IN A 5.196.105.14

    ;; Query time: 60 msec
    ;; SERVER: 8.8.8.8#53(8.8.8.8)
    ;; WHEN: Fri Sep 21 17:17:48 -03 2018
    ;; MSG SIZE  rcvd: 60

– Using the option +short the result will show the website’s ip.

    root@kali:/# dig zonetransfer.me +short
    217.147.177.157

– Using the options MX, +noall and +answer will display the mailserver’s IP.

    root@kali:/# dig zonetransfer.me MX +noall +answer

    ; <<>> DiG 9.11.4-4-Debian <<>> zonetransfer.me MX +noall +answer
    ;; global options: +cmd
    zonetransfer.me. 7199 IN MX 10 ALT2.ASPMX.L.GOOGLE.COM.
    zonetransfer.me. 7199 IN MX 20 ASPMX3.GOOGLEMAIL.COM.
    zonetransfer.me. 7199 IN MX 20 ASPMX5.GOOGLEMAIL.COM.
    zonetransfer.me. 7199 IN MX 10 ALT1.ASPMX.L.GOOGLE.COM.
    zonetransfer.me. 7199 IN MX 20 ASPMX4.GOOGLEMAIL.COM.
    zonetransfer.me. 7199 IN MX 20 ASPMX2.GOOGLEMAIL.COM.
    zonetransfer.me. 7199 IN MX 0 ASPMX.L.GOOGLE.COM.

- Host:

host is a simple utility for performing DNS lookups. It is normally used to convert names to IP addresses and vice versa.
In the simplest way, using the host command without any option will resolve the hostname.

    root@kali:/# host zonetransfer.me
    zonetransfer.me has address 217.147.177.157
    zonetransfer.me mail is handled by 10 ALT2.ASPMX.L.GOOGLE.COM.
    zonetransfer.me mail is handled by 20 ASPMX5.GOOGLEMAIL.COM.
    zonetransfer.me mail is handled by 20 ASPMX2.GOOGLEMAIL.COM.
    zonetransfer.me mail is handled by 0 ASPMX.L.GOOGLE.COM.
    zonetransfer.me mail is handled by 20 ASPMX4.GOOGLEMAIL.COM.
    zonetransfer.me mail is handled by 20 ASPMX3.GOOGLEMAIL.COM.
    zonetransfer.me mail is handled by 10 ALT1.ASPMX.L.GOOGLE.COM.-t option is used to specify the query type.
    ns option is used to specify the name server
    mx option is used to specity the email server.root@kali:/# host -t ns zonetransfer.me
    zonetransfer.me name server nsztm2.digi.ninja.
    zonetransfer.me name server nsztm1.digi.ninja.
    root@kali:/#
    root@kali:/#
    root@kali:/# host -t mx zonetransfer.me
    zonetransfer.me mail is handled by 10 ALT1.ASPMX.L.GOOGLE.COM.
    zonetransfer.me mail is handled by 20 ASPMX5.GOOGLEMAIL.COM.
    zonetransfer.me mail is handled by 10 ALT2.ASPMX.L.GOOGLE.COM.
    zonetransfer.me mail is handled by 20 ASPMX2.GOOGLEMAIL.COM.
    zonetransfer.me mail is handled by 20 ASPMX3.GOOGLEMAIL.COM.
    zonetransfer.me mail is handled by 20 ASPMX4.GOOGLEMAIL.COM.
    zonetransfer.me mail is handled by 0 ASPMX.L.GOOGLE.COM.


- DNS Zone transfers:

DNS zone transfers allow name servers to replicate all the entries about a domain.
When setting up DNS servers, you typically have a primary nameserver  and a backup server.  The transfer should be limited only to authorized slave server.
Sometimes the DNS server is not properly configured and allows anyone to request a replication of its DNS server zone.

To perform a zone transfer using the dig command do the following:

    root@kali:/# dig +nocmd axfr @nsztm1.digi.ninja zonetransfer.me +noall +answer

— snip —

We can also use the host comand to perform DNS zone transfer:
1st – Get the name server
2nd – Perform the zone transfer

- DNSRecon:

A python automated tool used to perform DNS zone transfer.

DNSRecon provides the ability to perform:

    Check all NS Records for Zone Transfers.
    Enumerate General DNS Records for a given Domain (MX, SOA, NS, A, AAAA, SPF and TXT).
    Perform common SRV Record Enumeration. Top Level Domain (TLD) Expansion.
    Check for Wildcard Resolution.
    Brute Force subdomain and host A and AAAA records given a domain and a wordlist.
    Perform a PTR Record lookup for a given IP Range or CIDR.
    Check a DNS Server Cached records for A, AAAA and CNAME Records provided a list of host records in a text file to check.
    Enumerate Common mDNS records in the Local Network Enumerate Hosts and Subdomains using Google.

Most used options:
 -d, –domain      <domain>   Target domain.
 -t, –type        <types>    Type of enumeration to perform (comma separated):
                                std       SOA, NS, A, AAAA, MX and SRV.
                                rvl       Reverse lookup of a given CIDR or IP range.
                                brt       Brute force domains and hosts using a given dictionary.
                                srv       SRV records.
                                axfr      Test all NS servers for a zone transfer.
                                goo       Perform Google search for subdomains and hosts.
                                bing      Perform Google search for subdomains and hosts.
                                crt       Perform crt.sh search for subdomains and hosts.
                                snoop     Perform cache snooping against all NS servers for a given domain, testing all with file containing the domains, file given with -D option.
                                tld       Remove the TLD of given domain and test against all TLDs registered in IANA.
                                zonewalk  Perform a DNSSEC zone walk using NSEC records.

    root@kali:/# dnsrecon -d zonetransfer.me -t axfr
–snip–

It is also possible to use a dictionary to perform a brute force attack using option  -D.  -D DICTIONARY, –dictionary DICTIONARY
                        Dictionary file of subdomain and hostnames to use for
                        brute force. Filter out of brute force domain lookup,
                        records that resolve to the wildcard defined IP
                        address when saving records.We can save the output to a xml file. –xml             <file>     XML file to save found records.


    root@kali:/# dnsrecon -d zonetransfer.me -t std –xml zonetrasnferme.xml

File saved

- DNSEnum:

Multithreaded perl script to enumerate DNS information of a domain and to discover non-contiguous ip blocks.
Most used options:  --noreverse Skip the reverse lookup operations.
                    -o –output <file> Output in XML format.

File saved


- Fierce:

Fierce is a reconnaissance tool. Fierce is a PERL script that quickly scans domains (usually in just a few minutes, assuming no network lag) using several tactics.

Most used options:
    -dns The domain you would like to scanner.
    -dnsfile  Use DNS servers provided by a file (one per line) for reverse lookups (brute force).
    -dnsserver  Use a particular DNS server for reverse lookups  (probably should be the DNS server of the target).  Fierce
    uses your DNS server for the initial SOA query and then uses the target’s DNS server for all additional queries by default.
    -file A file you would like to output to be logged to.As you can see below the zone transfer did not work so it tried a brute force attack. It peforms 2280 brute force tests. By the way, I obviously did not let it run. lol


- NMAP (see nmap notes)
